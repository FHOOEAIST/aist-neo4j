package science.aist.neo4j.it.namespace.b;

import science.aist.neo4j.it.namespace.RootNode;
import science.aist.neo4j.namespace.annotations.ExtendedNode;

/**
 * This class represents a class in a namespace extending the root namespace from {@link RootNode}
 * Unlike NamespaceA, NamespaceB doesn't extend Root, but is a completely different implementation
 * <p>
 * As there is no namespace annotation this class has the labels "test-RootNode"
 * and "science.machinelearning.analytics.graph.it.namespace.b-NamespaceB" in the Database
 * <p>
 * As the class doesn't extend from RootNode, and omits the "rootField" this field will be stored in a hidden field by the Repository
 * The class is identified as extension through the annotation. Without the annotation it would only have the "at..." label.
 *
 * @author Oliver Krauss
 * @since 1.0
 */
@ExtendedNode(parent = "test_RootNode")
public class NamespaceB {

    /**
     * Id generated by database
     */
    private Long id;

    /**
     * Field that exists only in namespace b
     */
    private String b;

    /**
     * Field that exists in multiple namespaces but should NOT lead to collisions
     */
    private String general;

    public NamespaceB() {
    }

    public NamespaceB(String b, String general) {
        this.b = b;
        this.general = general;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getB() {
        return b;
    }

    public void setB(String b) {
        this.b = b;
    }

    public String getGeneral() {
        return general;
    }

    public void setGeneral(String general) {
        this.general = general;
    }
}
